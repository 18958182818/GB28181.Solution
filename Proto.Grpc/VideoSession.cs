// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: video_session.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MediaSession {

  /// <summary>Holder for reflection information generated from video_session.proto</summary>
  public static partial class VideoSessionReflection {

    #region Descriptor
    /// <summary>File descriptor for video_session.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static VideoSessionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChN2aWRlb19zZXNzaW9uLnByb3RvEgxNZWRpYVNlc3Npb24i8wEKE01lZGlh",
            "U2Vzc2lvblJlcXVlc3QSNQoPYWNjZXNzX3Byb3RvY29sGAEgASgOMhwuTWVk",
            "aWFTZXNzaW9uLkFjY2Vzc1Byb3RvY29sEi0KDGFjdGlvbl90b19kbxgCIAEo",
            "DjIXLk1lZGlhU2Vzc2lvbi5PcGVyYXRpb24SNQoPc3RyZWFtX3Byb3RvY29s",
            "GAMgASgOMhwuTWVkaWFTZXNzaW9uLlN0cmVhbVByb3RvY29sEg8KB2lzX2lw",
            "djYYBCABKAgSEAoIZGV2aWNlaWQYBSABKAkSDgoGaXBhZGRyGAYgASgJEgwK",
            "BHBvcnQYByABKAUiZQoRTWVkaWFTZXNzaW9uUmVwbHkSEAoIZGV2aWNlaWQY",
            "ASABKAkSDgoGaXBhZGRyGAIgASgJEgwKBHBvcnQYAyABKAUSDAoEc3NyYxgE",
            "IAEoCRISCgpvc2Rfc3RyaW5nGAUgASgJIlwKEVBhcmFtZXRlcnNSZXF1ZXN0",
            "EjUKD2FjY2Vzc19wcm90b2NvbBgBIAEoDjIcLk1lZGlhU2Vzc2lvbi5BY2Nl",
            "c3NQcm90b2NvbBIQCghkZXZpY2VpZBgCIAEoCSI3Cg9QYXJhbWV0ZXJzUmVw",
            "bHkSEAoIZGV2aWNlaWQYASABKAkSEgoKb3NkX3N0cmluZxgCIAEoCSpJCglP",
            "cGVyYXRpb24SEwoPVklERU9fTElWRV9QTEFZEAASEgoOVklERU9fUExBWUJB",
            "Q0sQARITCg9WSURFT19ET1dBTkxPQUQQAioiCg5TdHJlYW1Qcm90b2NvbBIH",
            "CgNUQ1AQABIHCgNVRFAQASpdCg5BY2Nlc3NQcm90b2NvbBIJCgVPTlZJRhAA",
            "EgcKA1NJUBABEggKBE1RVFQQAhIICgRDT0FQEAMSDQoJV0VCU09DS0VUEAQS",
            "CQoFSFRUUDIQBRIJCgVIVFRQMRAGMrMBCgxWaWRlb0NvbnRyb2wSUAoIQXNr",
            "VmlkZW8SIS5NZWRpYVNlc3Npb24uTWVkaWFTZXNzaW9uUmVxdWVzdBofLk1l",
            "ZGlhU2Vzc2lvbi5NZWRpYVNlc3Npb25SZXBseSIAElEKDUFza1BhcmFtZXRl",
            "cnMSHy5NZWRpYVNlc3Npb24uUGFyYW1ldGVyc1JlcXVlc3QaHS5NZWRpYVNl",
            "c3Npb24uUGFyYW1ldGVyc1JlcGx5IgBCBaICAm1zYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::MediaSession.Operation), typeof(global::MediaSession.StreamProtocol), typeof(global::MediaSession.AccessProtocol), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MediaSession.MediaSessionRequest), global::MediaSession.MediaSessionRequest.Parser, new[]{ "AccessProtocol", "ActionToDo", "StreamProtocol", "IsIpv6", "Deviceid", "Ipaddr", "Port" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MediaSession.MediaSessionReply), global::MediaSession.MediaSessionReply.Parser, new[]{ "Deviceid", "Ipaddr", "Port", "Ssrc", "OsdString" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MediaSession.ParametersRequest), global::MediaSession.ParametersRequest.Parser, new[]{ "AccessProtocol", "Deviceid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MediaSession.ParametersReply), global::MediaSession.ParametersReply.Parser, new[]{ "Deviceid", "OsdString" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum Operation {
    [pbr::OriginalName("VIDEO_LIVE_PLAY")] VideoLivePlay = 0,
    [pbr::OriginalName("VIDEO_PLAYBACK")] VideoPlayback = 1,
    [pbr::OriginalName("VIDEO_DOWANLOAD")] VideoDowanload = 2,
  }

  public enum StreamProtocol {
    [pbr::OriginalName("TCP")] Tcp = 0,
    [pbr::OriginalName("UDP")] Udp = 1,
  }

  /// <summary>
  /// The access protocol of device
  /// </summary>
  public enum AccessProtocol {
    [pbr::OriginalName("ONVIF")] Onvif = 0,
    [pbr::OriginalName("SIP")] Sip = 1,
    [pbr::OriginalName("MQTT")] Mqtt = 2,
    [pbr::OriginalName("COAP")] Coap = 3,
    [pbr::OriginalName("WEBSOCKET")] Websocket = 4,
    [pbr::OriginalName("HTTP2")] Http2 = 5,
    [pbr::OriginalName("HTTP1")] Http1 = 6,
  }

  #endregion

  #region Messages
  /// <summary>
  /// The request message containing videoSessionRequest.
  /// </summary>
  public sealed partial class MediaSessionRequest : pb::IMessage<MediaSessionRequest> {
    private static readonly pb::MessageParser<MediaSessionRequest> _parser = new pb::MessageParser<MediaSessionRequest>(() => new MediaSessionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MediaSessionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MediaSession.VideoSessionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediaSessionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediaSessionRequest(MediaSessionRequest other) : this() {
      accessProtocol_ = other.accessProtocol_;
      actionToDo_ = other.actionToDo_;
      streamProtocol_ = other.streamProtocol_;
      isIpv6_ = other.isIpv6_;
      deviceid_ = other.deviceid_;
      ipaddr_ = other.ipaddr_;
      port_ = other.port_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediaSessionRequest Clone() {
      return new MediaSessionRequest(this);
    }

    /// <summary>Field number for the "access_protocol" field.</summary>
    public const int AccessProtocolFieldNumber = 1;
    private global::MediaSession.AccessProtocol accessProtocol_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaSession.AccessProtocol AccessProtocol {
      get { return accessProtocol_; }
      set {
        accessProtocol_ = value;
      }
    }

    /// <summary>Field number for the "action_to_do" field.</summary>
    public const int ActionToDoFieldNumber = 2;
    private global::MediaSession.Operation actionToDo_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaSession.Operation ActionToDo {
      get { return actionToDo_; }
      set {
        actionToDo_ = value;
      }
    }

    /// <summary>Field number for the "stream_protocol" field.</summary>
    public const int StreamProtocolFieldNumber = 3;
    private global::MediaSession.StreamProtocol streamProtocol_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaSession.StreamProtocol StreamProtocol {
      get { return streamProtocol_; }
      set {
        streamProtocol_ = value;
      }
    }

    /// <summary>Field number for the "is_ipv6" field.</summary>
    public const int IsIpv6FieldNumber = 4;
    private bool isIpv6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsIpv6 {
      get { return isIpv6_; }
      set {
        isIpv6_ = value;
      }
    }

    /// <summary>Field number for the "deviceid" field.</summary>
    public const int DeviceidFieldNumber = 5;
    private string deviceid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Deviceid {
      get { return deviceid_; }
      set {
        deviceid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ipaddr" field.</summary>
    public const int IpaddrFieldNumber = 6;
    private string ipaddr_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ipaddr {
      get { return ipaddr_; }
      set {
        ipaddr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 7;
    private int port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MediaSessionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MediaSessionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccessProtocol != other.AccessProtocol) return false;
      if (ActionToDo != other.ActionToDo) return false;
      if (StreamProtocol != other.StreamProtocol) return false;
      if (IsIpv6 != other.IsIpv6) return false;
      if (Deviceid != other.Deviceid) return false;
      if (Ipaddr != other.Ipaddr) return false;
      if (Port != other.Port) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccessProtocol != 0) hash ^= AccessProtocol.GetHashCode();
      if (ActionToDo != 0) hash ^= ActionToDo.GetHashCode();
      if (StreamProtocol != 0) hash ^= StreamProtocol.GetHashCode();
      if (IsIpv6 != false) hash ^= IsIpv6.GetHashCode();
      if (Deviceid.Length != 0) hash ^= Deviceid.GetHashCode();
      if (Ipaddr.Length != 0) hash ^= Ipaddr.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccessProtocol != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AccessProtocol);
      }
      if (ActionToDo != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ActionToDo);
      }
      if (StreamProtocol != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) StreamProtocol);
      }
      if (IsIpv6 != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsIpv6);
      }
      if (Deviceid.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Deviceid);
      }
      if (Ipaddr.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Ipaddr);
      }
      if (Port != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Port);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccessProtocol != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AccessProtocol);
      }
      if (ActionToDo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ActionToDo);
      }
      if (StreamProtocol != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) StreamProtocol);
      }
      if (IsIpv6 != false) {
        size += 1 + 1;
      }
      if (Deviceid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Deviceid);
      }
      if (Ipaddr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ipaddr);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MediaSessionRequest other) {
      if (other == null) {
        return;
      }
      if (other.AccessProtocol != 0) {
        AccessProtocol = other.AccessProtocol;
      }
      if (other.ActionToDo != 0) {
        ActionToDo = other.ActionToDo;
      }
      if (other.StreamProtocol != 0) {
        StreamProtocol = other.StreamProtocol;
      }
      if (other.IsIpv6 != false) {
        IsIpv6 = other.IsIpv6;
      }
      if (other.Deviceid.Length != 0) {
        Deviceid = other.Deviceid;
      }
      if (other.Ipaddr.Length != 0) {
        Ipaddr = other.Ipaddr;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            accessProtocol_ = (global::MediaSession.AccessProtocol) input.ReadEnum();
            break;
          }
          case 16: {
            actionToDo_ = (global::MediaSession.Operation) input.ReadEnum();
            break;
          }
          case 24: {
            streamProtocol_ = (global::MediaSession.StreamProtocol) input.ReadEnum();
            break;
          }
          case 32: {
            IsIpv6 = input.ReadBool();
            break;
          }
          case 42: {
            Deviceid = input.ReadString();
            break;
          }
          case 50: {
            Ipaddr = input.ReadString();
            break;
          }
          case 56: {
            Port = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The response message containing the videoSessionResponse.
  /// </summary>
  public sealed partial class MediaSessionReply : pb::IMessage<MediaSessionReply> {
    private static readonly pb::MessageParser<MediaSessionReply> _parser = new pb::MessageParser<MediaSessionReply>(() => new MediaSessionReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MediaSessionReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MediaSession.VideoSessionReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediaSessionReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediaSessionReply(MediaSessionReply other) : this() {
      deviceid_ = other.deviceid_;
      ipaddr_ = other.ipaddr_;
      port_ = other.port_;
      ssrc_ = other.ssrc_;
      osdString_ = other.osdString_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediaSessionReply Clone() {
      return new MediaSessionReply(this);
    }

    /// <summary>Field number for the "deviceid" field.</summary>
    public const int DeviceidFieldNumber = 1;
    private string deviceid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Deviceid {
      get { return deviceid_; }
      set {
        deviceid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ipaddr" field.</summary>
    public const int IpaddrFieldNumber = 2;
    private string ipaddr_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ipaddr {
      get { return ipaddr_; }
      set {
        ipaddr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 3;
    private int port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    /// <summary>Field number for the "ssrc" field.</summary>
    public const int SsrcFieldNumber = 4;
    private string ssrc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ssrc {
      get { return ssrc_; }
      set {
        ssrc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "osd_string" field.</summary>
    public const int OsdStringFieldNumber = 5;
    private string osdString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OsdString {
      get { return osdString_; }
      set {
        osdString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MediaSessionReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MediaSessionReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Deviceid != other.Deviceid) return false;
      if (Ipaddr != other.Ipaddr) return false;
      if (Port != other.Port) return false;
      if (Ssrc != other.Ssrc) return false;
      if (OsdString != other.OsdString) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Deviceid.Length != 0) hash ^= Deviceid.GetHashCode();
      if (Ipaddr.Length != 0) hash ^= Ipaddr.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (Ssrc.Length != 0) hash ^= Ssrc.GetHashCode();
      if (OsdString.Length != 0) hash ^= OsdString.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Deviceid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Deviceid);
      }
      if (Ipaddr.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Ipaddr);
      }
      if (Port != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Port);
      }
      if (Ssrc.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Ssrc);
      }
      if (OsdString.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(OsdString);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Deviceid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Deviceid);
      }
      if (Ipaddr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ipaddr);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (Ssrc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ssrc);
      }
      if (OsdString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OsdString);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MediaSessionReply other) {
      if (other == null) {
        return;
      }
      if (other.Deviceid.Length != 0) {
        Deviceid = other.Deviceid;
      }
      if (other.Ipaddr.Length != 0) {
        Ipaddr = other.Ipaddr;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      if (other.Ssrc.Length != 0) {
        Ssrc = other.Ssrc;
      }
      if (other.OsdString.Length != 0) {
        OsdString = other.OsdString;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Deviceid = input.ReadString();
            break;
          }
          case 18: {
            Ipaddr = input.ReadString();
            break;
          }
          case 24: {
            Port = input.ReadInt32();
            break;
          }
          case 34: {
            Ssrc = input.ReadString();
            break;
          }
          case 42: {
            OsdString = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The request message containing videoSessionRequest.
  /// </summary>
  public sealed partial class ParametersRequest : pb::IMessage<ParametersRequest> {
    private static readonly pb::MessageParser<ParametersRequest> _parser = new pb::MessageParser<ParametersRequest>(() => new ParametersRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ParametersRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MediaSession.VideoSessionReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParametersRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParametersRequest(ParametersRequest other) : this() {
      accessProtocol_ = other.accessProtocol_;
      deviceid_ = other.deviceid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParametersRequest Clone() {
      return new ParametersRequest(this);
    }

    /// <summary>Field number for the "access_protocol" field.</summary>
    public const int AccessProtocolFieldNumber = 1;
    private global::MediaSession.AccessProtocol accessProtocol_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaSession.AccessProtocol AccessProtocol {
      get { return accessProtocol_; }
      set {
        accessProtocol_ = value;
      }
    }

    /// <summary>Field number for the "deviceid" field.</summary>
    public const int DeviceidFieldNumber = 2;
    private string deviceid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Deviceid {
      get { return deviceid_; }
      set {
        deviceid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ParametersRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ParametersRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccessProtocol != other.AccessProtocol) return false;
      if (Deviceid != other.Deviceid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccessProtocol != 0) hash ^= AccessProtocol.GetHashCode();
      if (Deviceid.Length != 0) hash ^= Deviceid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccessProtocol != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AccessProtocol);
      }
      if (Deviceid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Deviceid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccessProtocol != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AccessProtocol);
      }
      if (Deviceid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Deviceid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ParametersRequest other) {
      if (other == null) {
        return;
      }
      if (other.AccessProtocol != 0) {
        AccessProtocol = other.AccessProtocol;
      }
      if (other.Deviceid.Length != 0) {
        Deviceid = other.Deviceid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            accessProtocol_ = (global::MediaSession.AccessProtocol) input.ReadEnum();
            break;
          }
          case 18: {
            Deviceid = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The response message containing the videoSessionResponse.
  /// </summary>
  public sealed partial class ParametersReply : pb::IMessage<ParametersReply> {
    private static readonly pb::MessageParser<ParametersReply> _parser = new pb::MessageParser<ParametersReply>(() => new ParametersReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ParametersReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MediaSession.VideoSessionReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParametersReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParametersReply(ParametersReply other) : this() {
      deviceid_ = other.deviceid_;
      osdString_ = other.osdString_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParametersReply Clone() {
      return new ParametersReply(this);
    }

    /// <summary>Field number for the "deviceid" field.</summary>
    public const int DeviceidFieldNumber = 1;
    private string deviceid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Deviceid {
      get { return deviceid_; }
      set {
        deviceid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "osd_string" field.</summary>
    public const int OsdStringFieldNumber = 2;
    private string osdString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OsdString {
      get { return osdString_; }
      set {
        osdString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ParametersReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ParametersReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Deviceid != other.Deviceid) return false;
      if (OsdString != other.OsdString) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Deviceid.Length != 0) hash ^= Deviceid.GetHashCode();
      if (OsdString.Length != 0) hash ^= OsdString.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Deviceid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Deviceid);
      }
      if (OsdString.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(OsdString);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Deviceid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Deviceid);
      }
      if (OsdString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OsdString);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ParametersReply other) {
      if (other == null) {
        return;
      }
      if (other.Deviceid.Length != 0) {
        Deviceid = other.Deviceid;
      }
      if (other.OsdString.Length != 0) {
        OsdString = other.OsdString;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Deviceid = input.ReadString();
            break;
          }
          case 18: {
            OsdString = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
